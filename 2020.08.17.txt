락 프리 큐

시나리오 모두 설명해보자. <= 문제가 여러개가 있다.

리스트 형태의 자료구조. (현재는 싱글 리스트)

더블은 양쪽에 대한 변화를 모두 하기 불가능

배열은 인덱스에 대한 오염 때문에 불가능. (top에 삽입과 top을 증가시키는 일이 분리되있다.) <= atomic 하게 할 방법이 없다.

시작과 끝을 가리키는 포인터.

스택과 다른 점 = rear가 존재하는 상황. front와 rear가 null이 되는 상황.

리스트 2가지 구조 1. 헤드와 테일이 더미노드.
		2. 헤드와 테일이 포인터. 헤드와 테일이 nullptr인지 항상 확인 필요.

lockFree qeueue에 dummy를 넣자. front와 rear를 동시에 nullptr로 세팅해야 하는 문제 발생.

but rear의 전 노드를 알 방법이 없음(싱글 리스트기 때문에)

front는 더미 rear는 더미가 아닌 구조. 그러나 이래도 여전히 같은 문제

front라는 포인터가 더미 노드를 가리킬 컷.
rear라는 포인터가 실제 마지막 노드를 가리킬 것.
마지막에 썻던 노드가 더미.(유동 더미)

프론트와 리어는 따라간다.

노드 더미를 생성하고 front와 rear가 더미를 찌른다. 실제 데이터는 더미의 next

enqeue는 rear뒤에 

dequeue는 front의 next에 있는 데이터를 넘겨주고 기존의 front가 가리키던 노드 삭제. front를 front의 next로 옮기자.

enqueue는 tail의 next를 new node를 가리키는 순간 qeueue에 이미 삽입된 상황.

enqueue의 단계는 2단계로 나뉨.
1. tail의 next에 new node를 연결하면 enqeue 성공(tail의 next가 nullptr이면 넣자.) <= 메모리 풀이 전제되어야 한다. 
2. tail을 new node로 바꿔야 한다. 2번 단계가 실패해도 1번 단계가 성공하면 성공 리턴.

사이즈 변수로 비었는지 확인해보자.

------------------------------------
enqueue 1단계 중간에서 멈춤. clone tail = _tail;
다른 스레드에서 여러 enqueue 성공.
다른 스레드에서 dequeue 성공.